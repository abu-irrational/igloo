#-------------------------------------------------------------------------
# TITLE:
#    igloo.test
#
# PROJECT:
#    igloo: Your project description
#
# DESCRIPTION:
#    igloo: Test Suite
#-------------------------------------------------------------------------

#-------------------------------------------------------------------------
# Load the tcltest package

if {[lsearch [namespace children] ::tcltest] == -1} {
    package require tcltest 2.3
    eval ::tcltest::configure $argv
}

namespace import ::tcltest::test

#-------------------------------------------------------------------------
# Load the package to be tested

source ../../lib/igloo/pkgModules.tcl

#-------------------------------------------------------------------------
# Setup and Cleanup

proc cleanup {} {
    catch {dog destroy}
    catch {animal destroy}
}

#-------------------------------------------------------------------------
# Basic Stuff

test basic-1.1 {normal classes still work} -body {
    oo::class create dog {
        variable name
        constructor {} { set name "Fido" }
        method name {} { return $name    }
    }
    # Calling _init doesn't cause a problem
    dog create fido 
    fido name
} -cleanup {
    cleanup
} -result {Fido}

#-------------------------------------------------------------------------
# igloo::define method

test method-1.1 {method declares method} -body {
    oo::class create dog
    igloo::define dog method bark {} { return "Woof" }
    dog create fido 
    fido bark
} -cleanup {
    cleanup
} -result {Woof}


#-------------------------------------------------------------------------
# var

test var-1.1 {var declares variable} -body {
    oo::class create dog {
        var name
        constructor {} { set name "Fido" }
        method name {} { return $name    }
    }
    dog create fido 
    fido name
} -cleanup {
    cleanup
} -result {Fido}

test var-1.2 {var initializes variable with empty string} -body {
    oo::class create dog {
        var name
        method name {} { return "*$name*" }
    }
    dog create fido 
    fido name
} -cleanup {
    cleanup
} -result {**}

test var-1.3 {var initializes variable with value} -body {
    oo::class create dog {
        var name "Fido"
        method name {} { return "*$name*" }
    }
    dog create fido
    fido name
} -cleanup {
    cleanup
} -result {*Fido*}

test var-1.4 {var initializes variable with array value} -body {
    oo::class create dog {
        var data -array {
            name "Fido"
            color "brown"
        }
        method data {} { return [array get data] }
    }
    dog create fido 
    fido data
} -cleanup {
    cleanup
} -result {name Fido color brown}

test var-2.1 {parent class vars are initialized} -body {
    oo::class create animal {
        var name "Joe"

        method name {} { return $name }
    }

    oo::class create dog {
        superclass animal
        var breed "mutt" 

        method breed {} { return $breed }
    }
    dog create fido 
    list [fido name] [fido breed]
} -cleanup {
    cleanup
} -result {Joe mutt}

test var-2.2 {child class vars override superclass vars} -body {
    oo::class create animal {
        var name "Joe"

        method name {} { return $name }
    }

    oo::class create dog {
        superclass animal
        var name "Fido"
    }
    dog create fido 
    fido name
} -cleanup {
    cleanup
} -result {Fido}


#-------------------------------------------------------------------------
# Cleanup

::tcltest::cleanupTests
